!= haml :repository_info, :layout => false

- if tree[:type] == "tree"
  %h2= is_subtree ? "#{commit_spec}: #{params["splat"].first}" : commit_spec
  .listing
    .heading
      .cell File
      .cell Size
      .cell Revision
      .cell &nbsp;
    - if is_subtree
      .tree
        .name
          %a{:href => "/#{repo.name}/#{commit_spec}/#{params["splat"].first.dirname}"} ..
        .size –
        .revision –
        .commitMessage &nbsp;
    - tree.sort_by { |k,v| k.to_s }.each do |name, data|
      - next unless data.is_a? Hash
      %div{:class => "#{data[:type]}#{" file_#{File.extname name}" unless data[:type] == "tree"}"}
        .name
          - if data[:type] == "tree"
            - if is_subtree
              %a{:href => "/#{repo.name}/#{commit_spec}/#{params["splat"].first}/#{name}"}= name
            - else
              %a{:href => "/#{repo.name}/#{commit_spec}/#{name}"}= name
          - else
            = name
        .size= data[:size] || "–"
        .revision
          - if data[:revision]
            %a{:href => "/#{repo.name}/#{data[:revision]}"}= data[:revision][0..4]
          - else
            –
        .commitMessage
          - if data[:revision] and info = Bithug::LogInfo::CommitInfo.find(:revision => data[:revision]).first
            %a{:href => "/#{info.user.name}"}
              != gravatar info.user.email, "10px"
            = info.message[0..140]
          - else
            &nbsp;

.commitInfoBox
  %h3 Recent Commits
  - if commit_entries.empty?
    Start committing to this repository. This is Open-Source!
  - commit_entries.each do |item|
    .item
      != gravatar item.user.email, 40
      .text
        %h4= time_ago item.date_time
        != item.to_s :html, :message_length => 140
